from django.shortcuts import render, redirect
from django.views import View
from master_cheif.ai_services.langchain import ask_recipe
from master_cheif.forms import MasterCheifForm


class HomeView(View):
    """
    Handles GET and POST requests for the home page.
    Manages the chat interaction between the user and the AI assistant.
    """

    def get(self, request):
        """
        Handles the GET request to display the chat interface and form.

        :param request: The HTTP request object.
        :return: Rendered template with the chat history and form.
        """
        chat_history = self._get_chat_history(request)
        form = MasterCheifForm()
        context = {
            'form': form,
            'chat_history': chat_history
        }
        return render(request, 'home.html', context)

    def post(self, request):
        """
        Handles the POST request to process the user's input, interact with the AI, 
        and update the chat history.

        :param request: The HTTP request object.
        :return: Redirects back to the home page after processing the input.
        """
        form = MasterCheifForm(request.POST)

        if form.is_valid():
            recipe_message = form.cleaned_data['recipe_message']
            ai_response_recipe = ask_recipe(recipe_message)
            self._update_chat_history(request, recipe_message, ai_response_recipe)

        return redirect('/')

    def _get_chat_history(self, request):
        """
        Retrieves the chat history from the session.

        :param request: The HTTP request object.
        :return: The chat history list from the session or an empty list if not present.
        """
        return request.session.get('chat_history', [])

    def _update_chat_history(self, request, user_message, ai_response):
        """
        Updates the chat history with the user's message and the AI's response.

        :param request: The HTTP request object.
        :param user_message: The message sent by the user.
        :param ai_response: The response generated by the AI.
        """
        chat_history = self._get_chat_history(request)
        chat_history.extend([
            {'sender': 'You', 'message': user_message},
            {'sender': 'Jarvis', 'message': ai_response}
        ])
        request.session['chat_history'] = chat_history









# from django.shortcuts import render, redirect
# from django.views import View

# from master_cheif.ai_services.langchain import askRecipe
# from master_cheif.forms import MasterCheifForm


# class HomeView(View):
#     def get(self, request):
#         chat_history = request.session.get('chat_history', [])
#         form = MasterCheifForm()
#         return render(request, 'home.html', {'form': form, 'chat_history': chat_history})

#     def post(self, request):
#         form = MasterCheifForm(request.POST)
#         if form.is_valid():
#             recipe_message = form.cleaned_data['recipe_message']
#             ai_response_recipe = askRecipe(recipe_message)
            
#             # Store the user message and AI response in the chat history
#             chat_history = request.session.get('chat_history', [])
#             chat_history.append({'sender': 'You', 'message': recipe_message})
#             chat_history.append({'sender': 'Jarvis', 'message': ai_response_recipe})
#             request.session['chat_history'] = chat_history
        
#         return redirect("/")